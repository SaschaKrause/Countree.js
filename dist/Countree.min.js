/*! Countree 2013-08-15 */
!function(a){function b(a){function b(a){for(var b=0;b<l.intervalSubscriptions.length;b++)l.intervalSubscriptions[b]&&l.intervalSubscriptions[b](a)}function d(){if(l.customTime&&!l.dateTime&&l.customTime.startFrom&&l.customTime.stopAt)for(var a=Math.abs(k.startCounterFromMilliseconds-k.stopCounterAtMilliseconds),b=100*(k.alreadyPassedMilliseconds/a),c=0;c<l.progressSubscriptions.length;c++)l.progressSubscriptions[c]&&l.progressSubscriptions[c](b)}function e(){k.userOptionsProvided||console.error(n.ERR_01_OPTIONS_NOT_SET)}function g(){clearInterval(k.countingIntervalReference),k.countingIntervalReference=null}function i(a,c){function e(){var c=new Date;k.alreadyPassedMilliseconds=c.getTime()-a.getTime()+f,k.nowAsDate=c,p.update(),b(p),d(),k.isFinished&&(g(),p.countNotifier.fireNotificationEvent(p.countNotifier.EVENT.ON_FINISH))}var f=c?k.alreadyPassedMilliseconds:0;k.countingIntervalReference=setInterval(e,l.updateIntervalInMilliseconds)}var j=this;this.version="0.0.1";var k={nowAsDate:null,userOptionsProvided:!1,startCounterFromMilliseconds:null,stopCounterAtMilliseconds:null,alreadyPassedMilliseconds:-1,isFinished:!1,countingIntervalReference:null,countDirection:"up",countToDate:null},l={updateIntervalInMilliseconds:1e3,name:"untitled",stopWhenFinished:!1,intervalSubscriptions:[],progressSubscriptions:[],millisecondsToCount:0},o=new f(l,k);this.state=m.NOT_STARTED,this.setOptions=function(a){h(l,a)},this.subscribeOnInterval=function(a,b){l.intervalSubscriptions.push(b)},this.subscribeOnProgress=function(a,b){l.progressSubscriptions.push(b)},a&&this.setOptions(a);var p=new c(this,k);this.init=function(){o.updateInternalCountPropertiesFromOptions(j),e(),p.init(),b(p),k.alreadyPassedMilliseconds=0,p.countNotifier.fireNotificationEvent(p.countNotifier.EVENT.ON_INIT)},this.start=function(){g(),p.countNotifier.fireNotificationEvent(p.countNotifier.EVENT.ON_START),this.init(),k.isFinished=!1,i(new Date,!1)},this.suspend=function(){g(),p.countNotifier.fireNotificationEvent(p.countNotifier.EVENT.ON_SUSPEND)},this.resume=function(){k.countingIntervalReference||(p.countNotifier.fireNotificationEvent(p.countNotifier.EVENT.ON_RESUME),i(new Date,!0))},this.notifyAt=function(a,b){p.countNotifier.addNotifier(a,b)},this.isCounting=function(){return!!k.countingIntervalReference}}function c(a,b){function c(a){var c=0,d=b.stopWhenFinished&&null!=b.stopCounterAtMilliseconds;if("up"===a&&null!=b.startCounterFromMilliseconds)c=b.startCounterFromMilliseconds+b.alreadyPassedMilliseconds,d&&c>=b.stopCounterAtMilliseconds&&(b.isFinished=!0,c=b.stopCounterAtMilliseconds);else if("down"===a&&null!=b.startCounterFromMilliseconds)c=b.startCounterFromMilliseconds-b.alreadyPassedMilliseconds,d&&c<=b.stopCounterAtMilliseconds&&(b.isFinished=!0,c=b.stopCounterAtMilliseconds);else if(b.countToDate){var e=b.nowAsDate.getTime(),f=b.countToDate.getTime();c=e>f?e-f:f-e}return c}var f=new e;this.calculatedMilliseconds=0,this.countNotifier=new d(a,b),this.init=function(){this.calculatedMilliseconds=b.startCounterFromMilliseconds,f.update(this.calculatedMilliseconds)},this.update=function(){this.calculatedMilliseconds=c(b.countDirection),f.update(this.calculatedMilliseconds)},this.formattedTime=function(){return f}}function d(a,b){var c=[];this.millisecondsStartingPoint=b,this.countreeReference=a,this.EVENT={ON_INIT:"onInit",ON_START:"onStart",ON_FINISH:"onFinish",ON_RESUME:"onResume",ON_SUSPEND:"onSuspend",ON_RESET:"onReset"},this.addNotifier=function(a,b){a.event&&c.push({event:a.event,callback:b})},this.resetNotifier=function(){for(var a=0;a<c.length;++a)c[a].alreadyFired=!1},this.fireNotificationEvent=function(b,d){for(var e=0;e<c.length;++e)c[e].event===b&&c[e].callback(a,d)}}function e(){function a(a){i=a}function b(a){return j.getDigitFromMsForTimeUnit(i,l.DAYS,a)}function c(a){return j.getDigitFromMsForTimeUnit(i,l.HOURS,a)}function d(a){return j.getDigitFromMsForTimeUnit(i,l.MINUTES,a)}function e(a){return j.getDigitFromMsForTimeUnit(i,l.SECONDS,a)}function f(a){return j.getDigitFromMsForTimeUnit(i,l.MILLISECONDS,a)}function h(){return b()+", "+c(2)+":"+d(2)+":"+e(2)+":"+f(3)}var i=0,j=new g;this.update=a,this.getDays=b,this.getHours=c,this.getMinutes=d,this.getSeconds=e,this.getMilliSeconds=f,this.toString=h}function f(a,b){function c(){var b=!!a.customTime&&!a.dateTime,c=!!a.dateTime&&!a.customTime;b?d(a.customTime):c?e(a.dateTime.date):console.error(n.ERR_02_OPTIONS_COUNT_TYPE_WRONG)}function d(a){b.startCounterFromMilliseconds=k(a.startFrom||{}),a.stopAt&&!i(a.stopAt)&&(b.stopCounterAtMilliseconds=k(a.stopAt),f())}function e(a){console.log(a),b.countToDate=a}function f(){b.startCounterFromMilliseconds>b.stopCounterAtMilliseconds&&(b.countDirection="down")}this.updateInternalCountPropertiesFromOptions=function(d){d.name=a.name,b.userOptionsProvided=!0,b.stopWhenFinished=!!a.stopWhenFinished,c()}}function g(){function a(a,b,c){var d=0;return l.MILLISECONDS===b?d=a%1e3:l.SECONDS===b?d=Math.floor(a/1e3)%60:l.MINUTES===b?d=Math.floor(a/1e3/60)%60:l.HOURS===b?d=Math.floor(a/1e3/60/60)%24:l.DAYS===b&&(d=Math.floor(a/1e3/60/60/24)),void 0===c?d:j(d,c)}this.getDigitFromMsForTimeUnit=a}function h(a,b){for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c]);return a}function i(a){for(var b in a)if(a.hasOwnProperty(b))return!1;return!0}function j(a,b){for(var c=""+a;c.length<b;)c="0"+c;return c}function k(a){return a.milliseconds||0+1e3*(a.seconds||0)+6e4*(a.minutes||0)+36e5*(a.hours||0)+864e5*(a.days||0)}var l={MILLISECONDS:"ms",SECONDS:"s",MINUTES:"m",HOURS:"h",DAYS:"d"},m={COUNTING:"counting",SUSPENDED:"suspended",NOT_STARTED:"not started"},n={ERR_01_OPTIONS_NOT_SET:"COUNTREE-ERR-01: Please provide some counter options. You can add them directly add instantiation (e.g. new Countree({})) or after that via countree.setOptions({}). Just make sure that there are options provided before starting the Countree.",ERR_02_OPTIONS_COUNT_TYPE_WRONG:"COUNTREE-ERR-02: You need to provide one of the following object inside your Countree option configuration: 'customTime:{}' OR 'dateTime:{}'",ERR_03_OPTIONS_CUSTOM_COUNT_DIRECTION_UNKNOWN:"COUNTREE-ERR-03: You need to specify an 'direction' (with 'up' or 'down') or provide an object to the 'stopAt' property",ERR_04_OPTIONS_CALLBACK_NOT_PROVIDED:"COUNTREE-ERR-04: No 'onInterval'-callback defined in countree options. This callback is necessary as it will be invoked on counting updates at each interval"};"function"==typeof define&&define.amd?define([],function(){return b}):a.Countree=b}("object"==typeof exports&&exports||window);